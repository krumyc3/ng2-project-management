# The following types define the data model of the example service
# based on which the GraphQL API is generated

type User @model {
  id: ID! @isUnique
  name: String
  dateOfBirth: DateTime

  # Uncomment below - you can declare relations between models like this

  # posts: [Post!]! @relation(name: "UserPosts")
}


# Uncomment the model below as well

# type Post @model {
#   id: ID! @isUnique
#   title: String!
#
#   # Every relation also required a back-relation (to determine 1:1, 1:n or n:m)
#   author: User! @relation(name: "UserPosts")
# }
type Project @model {
  id: ID! @isUnique
  createdAt: DateTime!
  updatedAt: DateTime!

  tasks: [Task!]! @relation(name: "TasksOnProject")
  name: String!
  description: String!
}

type Task @model {
  id: ID! @isUnique
  createdAt: DateTime!
  updatedAt: DateTime!
  
  project: Project @relation(name: "TasksOnProject")
  comments: [Comment!]! @relation(name: "CommentsOnTask")
  title: String!
  description: String!
  due: DateTime
  status: String @defaultValue(value: "No status") @migrationValue(value: "No status")

}

type Comment @model {
  id: ID! @isUnique
  createdAt: DateTime!
  updatedAt: DateTime!

  task: Task @relation(name: "CommentsOnTask")
  content: String!
  likes: Int @defaultValue(value: 0)
}